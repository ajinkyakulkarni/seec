//===- include/seec/Trace/Events.def --------------------------------------===//
//
//                                    SeeC
//
// This file is distributed under The MIT License (MIT). See LICENSE.TXT for
// details.
//
//===----------------------------------------------------------------------===//
///
/// \file
///
/// SEEC_TRACE_EVENT(
///  EventName,
///  Properties---,
///  Traits---
///  )
///
/// Where Properties is a quoted list (created with SEEC_PP_QUOTE), and each
/// element in the list takes the form:
///  (Type, Name)
///
/// And Traits is a quoted list (created with SEEC_PP_QUOTE), and each element
/// in the list takes the form:
///  (EventName, TraitName)
///
/// The possible traits are listed in TraceFormat.hpp.
///
//===----------------------------------------------------------------------===//

#ifndef SEEC_TRACE_EVENT
#error "Must define SEEC_TRACE_EVENT before including Events.def"
#endif

#include "seec/Preprocessor/Quote.h"

SEEC_TRACE_EVENT(TraceEnd,
  SEEC_PP_QUOTE(
    (uint64_t, Dummy)
  ),
  SEEC_PP_QUOTE(
    (TraceEnd, is_block_start)
  ))

SEEC_TRACE_EVENT(FunctionStart,
  SEEC_PP_QUOTE(
    (uint32_t, FunctionIndex),
    (offset_uint, EventOffsetStart),
    (offset_uint, EventOffsetEnd),
    (uint64_t, ThreadTimeEntered),
    (uint64_t, ThreadTimeExited)
  ),
  SEEC_PP_QUOTE(
    (FunctionStart, is_block_start)
  ))

SEEC_TRACE_EVENT(FunctionEnd,
  SEEC_PP_QUOTE(
    (offset_uint, EventOffsetStart)
  ),
  SEEC_PP_QUOTE(
    (FunctionEnd, is_block_start)
  ))

SEEC_TRACE_EVENT(NewProcessTime,
  SEEC_PP_QUOTE(
    (uint64_t, ProcessTime)
  ),
  SEEC_PP_QUOTE(
    (NewProcessTime, is_block_start)
  ))

SEEC_TRACE_EVENT(NewThreadTime,
  SEEC_PP_QUOTE(
    (uint64_t, ThreadTime)
  ),
  SEEC_PP_QUOTE(
    (NewThreadTime, is_block_start),
    (NewThreadTime, is_function_level)
  ))

SEEC_TRACE_EVENT(PreInstruction,
  SEEC_PP_QUOTE(
    (seec::InstrIndexInFn, Index)
  ),
  SEEC_PP_QUOTE(
    (PreInstruction, is_block_start),
    (PreInstruction, is_function_level),
    (PreInstruction, is_instruction)
  ))

SEEC_TRACE_EVENT(Instruction,
  SEEC_PP_QUOTE(
    (seec::InstrIndexInFn, Index)
  ),
  SEEC_PP_QUOTE(
    (Instruction, is_block_start),
    (Instruction, is_function_level),
    (Instruction, is_instruction)
  ))

SEEC_TRACE_EVENT(InstructionWithUInt8,
  SEEC_PP_QUOTE(
    (uint8_t, Value),
    (seec::InstrIndexInFn, Index)
  ),
  SEEC_PP_QUOTE(
    (InstructionWithUInt8, is_block_start),
    (InstructionWithUInt8, is_function_level),
    (InstructionWithUInt8, is_instruction)
  ))

SEEC_TRACE_EVENT(InstructionWithUInt16,
  SEEC_PP_QUOTE(
    (uint16_t, Value),
    (seec::InstrIndexInFn, Index)
  ),
  SEEC_PP_QUOTE(
    (InstructionWithUInt16, is_block_start),
    (InstructionWithUInt16, is_function_level),
    (InstructionWithUInt16, is_instruction)
  ))

SEEC_TRACE_EVENT(InstructionWithUInt32,
  SEEC_PP_QUOTE(
    (uint32_t, Value),
    (seec::InstrIndexInFn, Index)
  ),
  SEEC_PP_QUOTE(
    (InstructionWithUInt32, is_block_start),
    (InstructionWithUInt32, is_function_level),
    (InstructionWithUInt32, is_instruction)
  ))

SEEC_TRACE_EVENT(InstructionWithUInt64,
  SEEC_PP_QUOTE(
    (seec::InstrIndexInFn, Index),
    (uint64_t, Value)
  ),
  SEEC_PP_QUOTE(
    (InstructionWithUInt64, is_block_start),
    (InstructionWithUInt64, is_function_level),
    (InstructionWithUInt64, is_instruction)
  ))

SEEC_TRACE_EVENT(InstructionWithPtr,
  SEEC_PP_QUOTE(
    (seec::InstrIndexInFn, Index),
    (uint64_t, Value)
  ),
  SEEC_PP_QUOTE(
    (InstructionWithPtr, is_block_start),
    (InstructionWithPtr, is_function_level),
    (InstructionWithPtr, is_instruction)
  ))

SEEC_TRACE_EVENT(InstructionWithFloat,
  SEEC_PP_QUOTE(
    (seec::InstrIndexInFn, Index),
    (float, Value)
  ),
  SEEC_PP_QUOTE(
    (InstructionWithFloat, is_block_start),
    (InstructionWithFloat, is_function_level),
    (InstructionWithFloat, is_instruction)
  ))

SEEC_TRACE_EVENT(InstructionWithDouble,
  SEEC_PP_QUOTE(
    (seec::InstrIndexInFn, Index),
    (double, Value)
  ),
  SEEC_PP_QUOTE(
    (InstructionWithDouble, is_block_start),
    (InstructionWithDouble, is_function_level),
    (InstructionWithDouble, is_instruction)
  ))

SEEC_TRACE_EVENT(InstructionWithLongDouble,
  SEEC_PP_QUOTE(
    (seec::InstrIndexInFn, Index),
    (uint64_t, ValueWord1),
    (uint64_t, ValueWord2)
  ),
  SEEC_PP_QUOTE(
    (InstructionWithLongDouble, is_block_start),
    (InstructionWithLongDouble, is_function_level),
    (InstructionWithLongDouble, is_instruction)
  ))

SEEC_TRACE_EVENT(Alloca,
  SEEC_PP_QUOTE(
    (std::size_t, ElementSize),
    (std::size_t, ElementCount)
  ),
  SEEC_PP_QUOTE(
    (Alloca, is_function_level)
  ))

SEEC_TRACE_EVENT(StackRestore,
  SEEC_PP_QUOTE(
    (uint32_t, PopCount)
  ),
  SEEC_PP_QUOTE(
    (StackRestore, is_function_level)
  ))

SEEC_TRACE_EVENT(Malloc,
  SEEC_PP_QUOTE(
    (std::size_t, Size),
    (uint64_t, ProcessTime)
  ),
  SEEC_PP_QUOTE(
    (Malloc, modifies_shared_state)
  ))

SEEC_TRACE_EVENT(Free,
  SEEC_PP_QUOTE(
    (uint64_t, Address),
    (uint64_t, ProcessTime)
  ),
  SEEC_PP_QUOTE(
    (Free, modifies_shared_state)
  ))

SEEC_TRACE_EVENT(Realloc,
  SEEC_PP_QUOTE(
    (uintptr_t,   Address),
    (std::size_t, OldSize),
    (std::size_t, NewSize),
    (uint64_t,    ProcessTime)
  ),
  SEEC_PP_QUOTE(
    (Realloc, modifies_shared_state)
  ))

SEEC_TRACE_EVENT(StateTyped,
  SEEC_PP_QUOTE(
    (uintptr_t, Address),
    (uint64_t, ProcessTime),
    (offset_uint, ValueOffset)
  ),
  SEEC_PP_QUOTE(
    (StateTyped, modifies_shared_state),
    (StateTyped, is_memory_state)
  ))

SEEC_TRACE_EVENT(StateUntypedSmall,
  SEEC_PP_QUOTE(
    (uint8_t, Size),
    (uintptr_t, Address),
    (uint64_t, ProcessTime),
    (uint64_t, Data)
  ),
  SEEC_PP_QUOTE(
    (StateUntypedSmall, modifies_shared_state),
    (StateUntypedSmall, is_memory_state)
  ))

SEEC_TRACE_EVENT(StateUntyped,
  SEEC_PP_QUOTE(
    (uintptr_t, Address),
    (uint64_t, ProcessTime),
    (offset_uint, DataOffset),
    (std::size_t, DataSize)
  ),
  SEEC_PP_QUOTE(
    (StateUntyped, modifies_shared_state),
    (StateUntyped, is_memory_state)
  ))

SEEC_TRACE_EVENT(StateMemmove,
  SEEC_PP_QUOTE(
    (uint64_t, ProcessTime),
    (uintptr_t, SourceAddress),
    (uintptr_t, DestinationAddress),
    (std::size_t, Size)
  ),
  SEEC_PP_QUOTE(
    (StateMemmove, modifies_shared_state),
    (StateMemmove, is_memory_state)
  ))

SEEC_TRACE_EVENT(StateClear,
  SEEC_PP_QUOTE(
    (uintptr_t, Address),
    (uint64_t, ProcessTime),
    (std::size_t, ClearSize)
  ),
  SEEC_PP_QUOTE(
    (StateClear, modifies_shared_state)
  ))

SEEC_TRACE_EVENT(KnownRegionAdd,
  SEEC_PP_QUOTE(
    (uintptr_t, Address),
    (std::size_t, Size),
    (bool, Readable),
    (bool, Writable)
  ),
  SEEC_PP_QUOTE(
    (KnownRegionAdd, modifies_shared_state)
  ))

SEEC_TRACE_EVENT(KnownRegionRemove,
  SEEC_PP_QUOTE(
    (uintptr_t, Address),
    (std::size_t, Size),
    (bool, Readable),
    (bool, Writable)
  ),
  SEEC_PP_QUOTE(
    (KnownRegionRemove, modifies_shared_state)
  ))

SEEC_TRACE_EVENT(ByValRegionAdd,
  SEEC_PP_QUOTE(
    (uint16_t, Argument),
    (uintptr_t, Address),
    (std::size_t, Size)
  ),
  SEEC_PP_QUOTE(
    (ByValRegionAdd, is_function_level)
  ))

SEEC_TRACE_EVENT(FileOpen,
  SEEC_PP_QUOTE(
    (uint64_t, ProcessTime),
    (uintptr_t, FileAddress),
    (offset_uint, FilenameOffset),
    (offset_uint, ModeOffset)
  ),
  SEEC_PP_QUOTE(
    (FileOpen, modifies_shared_state)
  ))

SEEC_TRACE_EVENT(FileWrite,
  SEEC_PP_QUOTE(
    (uint64_t, ProcessTime),
    (uintptr_t,   FileAddress),
    (offset_uint, DataOffset),
    (uint64_t,    DataSize)
  ),
  SEEC_PP_QUOTE(
    (FileWrite, modifies_shared_state)
  ))

SEEC_TRACE_EVENT(FileWriteFromMemory,
  SEEC_PP_QUOTE(
    (uint64_t, ProcessTime),
    (uintptr_t, FileAddress),
    (uintptr_t, DataAddress),
    (uint64_t,  DataSize)
  ),
  SEEC_PP_QUOTE(
    (FileWriteFromMemory, modifies_shared_state)
  ))

SEEC_TRACE_EVENT(FileClose,
  SEEC_PP_QUOTE(
    (uint64_t, ProcessTime),
    (uintptr_t, FileAddress),
    (offset_uint, FilenameOffset),
    (offset_uint, ModeOffset)
  ),
  SEEC_PP_QUOTE(
    (FileClose, modifies_shared_state)
  ))

SEEC_TRACE_EVENT(DirOpen,
  SEEC_PP_QUOTE(
    (uint64_t, ProcessTime),
    (uintptr_t, DirAddress),
    (offset_uint, DirnameOffset)
  ),
  SEEC_PP_QUOTE(
    (DirOpen, modifies_shared_state)
  ))

SEEC_TRACE_EVENT(DirClose,
  SEEC_PP_QUOTE(
    (uint64_t, ProcessTime),
    (uintptr_t, DirAddress),
    (offset_uint, DirnameOffset)
  ),
  SEEC_PP_QUOTE(
    (DirClose, modifies_shared_state)
  ))

SEEC_TRACE_EVENT(RuntimeError,
  SEEC_PP_QUOTE(
    (uint16_t, ErrorType),
    (uint8_t, ArgumentCount),
    (uint8_t, AdditionalCount),
    (uint8_t, IsTopLevel)
  ),
  SEEC_PP_QUOTE(
    (RuntimeError, is_function_level)
  ))

SEEC_TRACE_EVENT(RuntimeErrorArgument,
  SEEC_PP_QUOTE(
    (uint8_t, ArgumentType),
    (uint64_t, ArgumentData)
  ),
  SEEC_PP_QUOTE(
    (RuntimeErrorArgument, is_subservient)
  ))

#undef SEEC_TRACE_EVENT
