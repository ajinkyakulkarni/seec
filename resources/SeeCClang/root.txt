root:table {
  // Contains textual descriptions of errors that can occur in the library.
  errors:table {
    //
    FileManagerGetFileFail:string {
      "Couldn't get file from FileManager."
    }

    //
    SourceLocationInvalid:string {
      "Invalid source location."
    }
  }

  // Contains formatting for printing state information.
  states:table {
    // 
    MallocState:string { "{size} byte(s) at {address}." }

    //
    MallocStateAllocatedAt:string { "allocated in file {filename} at line {line}, column {column}." }
  }

  Values:table {
    Descriptive:table {
      PointerInMemoryUninitialized:string { "↛ (uninitialized pointer in memory)" }
      PointerInMemoryNULL:string { "⇥ (NULL pointer in memory)" }
      PointerInMemoryOpaque:string { "⇒ (opaque pointer in memory)" }
      PointerInMemoryInvalid:string { "↝ (invalid pointer in memory)" }
      PointerInMemory:string { "→ (pointer in memory)" }
      PointerNULL:string { "⇥ (NULL pointer)" }
      PointerOpaque:string { "⇒ (opaque pointer)" }
      PointerInvalid:string { "↝ (invalid pointer)" }
      Pointer:string { "→ (pointer)" }
      LValue:string { "(lvalue)" }

      // Number of character spaces used by the shortened representation (e.g. the ellipsis).
      ShortenedPadding:int { 1 }

      // Format the shortened representation.
      Shortened:string { "{shortened}…" }

      // Used when the number of characters required by the shortened representation is larger than the number of characters available. This should be as short as possible.
      TooShort:string { "…" }
    }

    Micro:table {
      PointerInMemoryUninitialized:string { "↛" }
      PointerInMemoryNULL:string { "⇥" }
      PointerInMemoryOpaque:string { "⇒" }
      PointerInMemoryInvalid:string { "↝" }
      PointerInMemory:string { "→" }
      PointerNULL:string { "⇥" }
      PointerOpaque:string { "⇒" }
      PointerInvalid:string { "↝" }
      Pointer:string { "→" }
      LValue:string { "l" }
    }
  }

  Graph:table {
    Layout:table {
      LEVStandard:table {
        Name:string { "Standard" }
      }
      LEVCString:table {
        Name:string { "C String" }
      }
      LEVElideUnreferenced:table {
        Name:string { "Elide unreferenced elements" }
        Elided:string { "<{0, plural, =1 {value elided} other {values elided}}>" }
      }
      LEVElideEmptyUnreferencedStrings:table {
        Name:string { "Elide empty unreferenced strings" }
        Elided:string { "<{0, plural, =1 {string elided} other {strings elided}}>" }
      }
      LEVElideUninitOrZeroElements:table {
        Name:string { "Elide uninitialized or zero values" }
        Elided:string { "<{0, plural, =1 {value elided} other {values elided}}>" }
      }
      LEAStandard:table {
        Name:string { "Standard" }
      }
      LEACString:table {
        Name:string { "C String" }
      }
    }

    Descriptions:table {
      UnreferencedDynamic:string { "<{0, plural, =1 {1 byte of dynamically allocated memory} other {{0} bytes of dynamically allocated memory}}>" }
      Stream:string {"FILE: \"{0}\""}
      DIR:string {"DIR: \"{0}\""}
    }
  }
}
