root:table {
  // Contains text used in the TraceViewer GUI.
  GUIText:table {
    //
    // Command line options
    //

    CmdLine_Help:string {"Print this usage information"}

    CmdLine_Files:string {"Files to open"}

    //
    // Welcome frame
    //

    Welcome_Title:string {"SeeC Trace Viewer"}

    "Welcome.html":import {"HTML/Welcome.html"}


    //
    // Main trace viewing frame
    //

    FrameTitle:string {"SeeC Trace Viewer"}


    //
    // Menus
    //

    Menu_File:string {"&File"}

    MenuRecord:table {
      Title:string {"&Recording"}
      Settings:string {"&Settings"}
    }

    MenuView:table {
      Title:string {"&View"}
      Explanation:string {"&Explanation"}
      Graph:string {"&Graph"}
      EvaluationTree:string {"E&valuation Tree"}
    }


    //
    // Recording settings dialog
    //

    RecordingSettingsDialog:table {
      Title:string {"Recording settings"}

      Token:string {"Your unique token:"}

      MaximumSize:string {"Maximum size of a single recording (in MiB):"}

      MaximumStore:string {"Maximum size of recordings to store locally (in MiB):"}
    }


    //
    // Open trace dialog
    //

    OpenTrace_Title:string {"Choose a trace file to open"}

    OpenTrace_FileType:string {"SeeC Process Trace (*.seec;*.spt)|*.seec;*.spt"}

    OpenTrace_Status_Loaded {"Loaded trace with {0} states."}

    OpenTrace_Error_FailIsDirectory:string {"Couldn't check if path was a directory."}

    OpenTrace_Error_LoadProcessTrace:string {"Couldn't read process trace."}

    OpenTrace_Error_ParseIRFile:string {"Couldn't parse LLVM Module."}


    //
    // Source-code notebook
    //
    SourceBook_Title:string {"Source code"}

    SourceView_FunctionEntry:string {"Entering function"}

    SourceView_FunctionExit:string {"Leaving function"}


    //
    // ProcessTime scroller
    //
    ScrollProcessTime_Title:string {"Process time"}


    //
    // ThreadTime scroller
    //
    ScrollThreadTime:table {
      Title:string {"Thread Time"}

      GoToStart:string {"Go to start"}

      StepBack:string {"Step back"}

      StepForward:string {"Step forward"}

      GoToNextError:string {"Go to next error"}

      GoToEnd:string {"Go to end"}
    }


    //
    // Common
    //
    ThreadNumber:string {"Thread #{0}"}


    //
    // Explanation viewer
    //
    Explanation:table {
      Title:string {"Explanation"}
    }


    //
    // Graph viewer
    //
    Graph:table {
      Title:string {"Graph"}
    }


    //
    // Evaluation tree
    //
    EvaluationTree:table {
      Title:string {"Evaluation Tree"}
    }


    //
    // Call tree
    //
    CallTree_Column0Title:string {"Call tree"}

    CallTree_UnknownFunction:string {"<Unknown Function>"}


    //
    // Dynamic memory view
    //
    MallocView_Title:string {"Dynamic memory"}

    MallocView_ColumnTime:string {"Allocation Time"}

    MallocView_ColumnAddress:string {"At Address"}

    MallocView_ColumnSize:string {"Size (in bytes)"}
  }


  GUIImages:table {
    Movement:table {
      BackwardArrow:import {"Images/backward-arrow.png"}

      BackwardArrowToBlock:import {"Images/backward-arrow-to-block.png"}

      BackwardArrowToError:import {"Images/backward-arrow-to-error.png"}

      ForwardArrow:import {"Images/forward-arrow.png"}

      ForwardArrowToBlock:import {"Images/forward-arrow-to-block.png"}

      ForwardArrowToError:import {"Images/forward-arrow-to-error.png"}
    }
  }


  // Common contextual navigation resources.
  ContextualNavigation:table {
    StmtRewind:string {"Rewind to when this statement was last evaluated"}

    StmtForward:string {"Move forward to when this statement is next evaluated"}
  }


  // StateGraphViewerPanel resources
  StateGraphViewer:table {
    WebViewHTML:import {"HTML/StateGraphViewer.html"}

    "StateGraphViewerNoGraphviz.html":import {"HTML/StateGraphViewerNoGraphviz.html"}

    "jquery-1.8.2.min.js":import {"HTML/jquery-1.8.2.min.js"}

    "Styles.css":import {"HTML/Styles.css"}

    CMValueRewindAllocation:string {"Rewind to when this memory was allocated"}

    CMValueRewindModification:string {"Rewind to when this value was last changed"}

    CMValueForwardModification:string {"Forward to when this value is next changed"}

    CMValueForwardDeallocation:string {"Forward to when this memory is deallocated"}

    CMValueDisplayAs:string {"Display as"}

    CMDereferenceUse:string {"Layout using this reference"}

    CMFunctionRewindEntry:string {"Rewind to when this function was entered"}

    CMFunctionForwardExit:string {"Forward to when this function is complete"}

    CMAreaRewindAllocation:string {"Rewind to when this memory was allocated"}

    CMAreaForwardDeallocation:string {"Forward to when this memory is deallocated"}

    CMAreaDisplayAs:string {"Display as"}
  }


  // Messages for the record and replay system.
  ActionRecording:table {
    ErrorAttribute:string {"Failed to read attribute {name}."}

    ReplayFrameTitle:string {"Action replay"}

    ReplayFileOpen:string {"Select an action recording to replay"}

    ReplayFileType:string {"SeeC Action Recording (*.xml)|*.xml"}

    ReplayFileInvalid:string {"This does not appear to be a valid action recording."}

    ReplayFileOld:string {"This action recording is for and older version of SeeC."}

    ReplayFileNew:string {"A newer version of SeeC is required to view this action recording."}

    ButtonPlay:string {"Play"}

    ButtonPause:string {"Pause"}

    ButtonStep:string {"Step"}
  }


  // Keywords used by Scintilla lexers.
  ScintillaKeywords:table {
    C:array {
      {"asm bool break case char const continue do double else enum extern false float for goto if inline int long register return short signed sizeof static struct switch true typedef union unsigned void volatile wchar_t while"}
      {"file"}
      {"a addindex addtogroup anchor arg attention author b brief bug c class code date def defgroup deprecated dontinclude e em endcode endhtmlonly endif endlatexonly endlink endverbatim enum example exception f$ f[ f] file fn hideinitializer htmlinclude htmlonly if image include ingroup internal invariant interface latexonly li line link mainpage name namespace nosubgrouping note overload p page par param post pre ref relates remarks return retval sa section see showinitializer since skip skipline struct subsection test throw todo typedef union until var verbatim verbinclude version warning weakgroup $ @ \"\" & < > # { }"}
    }
    CPP:array {
      {"asm auto bool break case catch char class const const_cast continue default delete do double dynamic_cast else enum explicit export extern false float for friend goto if inline int long mutable namespace new operator private protected public register reinterpret_cast return short signed sizeof static static_cast struct switch template this throw true try typedef typeid typename union unsigned using virtual void volatile wchar_t while"}
      {"file"}
      {"a addindex addtogroup anchor arg attention author b brief bug c class code date def defgroup deprecated dontinclude e em endcode endhtmlonly endif endlatexonly endlink endverbatim enum example exception f$ f[ f] file fn hideinitializer htmlinclude htmlonly if image include ingroup internal invariant interface latexonly li line link mainpage name namespace nosubgrouping note overload p page par param post pre ref relates remarks return retval sa section see showinitializer since skip skipline struct subsection test throw todo typedef union until var verbatim verbinclude version warning weakgroup $ @ \"\" & < > # { }"}
    }
  }

  //
  // Default style settings for Scintilla
  //
  ScintillaStyles:table {
    //
    // Common styles
    //
    
    Default:table {
      Name:string {"Default"}
      Foreground:string {"BLACK"}
      Background:string {"WHITE"}
      FontName:string {""}
      FontSize:int {12}
      FontStyle:string {""}
      LetterCase:int {0}
    }
    
    LineNumber:table {
      Name:string {"Line number"}
      Foreground:string {"DARK GREY"}
      Background:string {"LIGHT GREY"}
      FontName:string {""}
      FontSize:int {12}
      FontStyle:string {""}
      LetterCase:int {0}
    }
    
    BraceLight:table {
      Name:string {"Brace light"}
      Foreground:string {"BLACK"}
      Background:string {"WHITE"}
      FontName:string {""}
      FontSize:int {12}
      FontStyle:string {""}
      LetterCase:int {0}
    }
    
    BraceBad:table {
      Name:string {"Brace bad"}
      Foreground:string {"BLACK"}
      Background:string {"WHITE"}
      FontName:string {""}
      FontSize:int {12}
      FontStyle:string {""}
      LetterCase:int {0}
    }
    
    ControlChar:table {
      Name:string {"Control character"}
      Foreground:string {"BLACK"}
      Background:string {"WHITE"}
      FontName:string {""}
      FontSize:int {12}
      FontStyle:string {""}
      LetterCase:int {0}
    }
    
    IndentGuide:table {
      Name:string {"Indent guide"}
      Foreground:string {"BLACK"}
      Background:string {"WHITE"}
      FontName:string {""}
      FontSize:int {12}
      FontStyle:string {""}
      LetterCase:int {0}
    }
    
    CallTip:table {
      Name:string {"Call tip"}
      Foreground:string {"BLACK"}
      Background:string {"WHITE"}
      FontName:string {""}
      FontSize:int {12}
      FontStyle:string {""}
      LetterCase:int {0}
    }

    //
    // SeeC-specific styles
    //

    SeeCRuntimeError:table {
      Name:string {"Runtime error"}
      Foreground:string {"BLACK"}
      Background:string {"rgb(255,200,200)"}
      FontName:string {""}
      FontSize:int {12}
      FontStyle:string {""}
      LetterCase:int {0}
    }

    SeeCRuntimeValue:table {
      Name:string {"Runtime value"}
      Foreground:string {"BLACK"}
      Background:string {"rgb(200,255,200)"}
      FontName:string {""}
      FontSize:int {12}
      FontStyle:string {""}
      LetterCase:int {0}
    }

    SeeCRuntimeInformation:table {
      Name:string {"Runtime information"}
      Foreground:string {"BLACK"}
      Background:string {"rgb(200,200,255)"}
      FontName:string {""}
      FontSize:int {12}
      FontStyle:string {""}
      LetterCase:int {0}
    }

    //
    // Lexer-specific styles
    //
    
    Comment:table {
      Name:string {"Comment"}
      Foreground:string {"FOREST GREEN"}
      Background:string {"WHITE"}
      FontName:string {""}
      FontSize:int {12}
      FontStyle:string {""}
      LetterCase:int {0}
    }

    CommentLine:table {
      Name:string {"Comment line"}
      Foreground:string {"FOREST GREEN"}
      Background:string {"WHITE"}
      FontName:string {""}
      FontSize:int {12}
      FontStyle:string {""}
      LetterCase:int {0}
    }
    
    CommentDoc:table {
      Name:string {"Comment (Doxygen)"}
      Foreground:string {"FOREST GREEN"}
      Background:string {"WHITE"}
      FontName:string {""}
      FontSize:int {12}
      FontStyle:string {""}
      LetterCase:int {0}
    }

    Number:table {
      Name:string {"Number"}
      Foreground:string {"SIENNA"}
      Background:string {"WHITE"}
      FontName:string {""}
      FontSize:int {12}
      FontStyle:string {""}
      LetterCase:int {0}
    }
    
    Keyword1:table {
      Name:string {"Keyword1"}
      Foreground:string {"BLUE"}
      Background:string {"WHITE"}
      FontName:string {""}
      FontSize:int {12}
      FontStyle:string {"Bold"}
      LetterCase:int {0}
    }
    
    String:table {
      Name:string {"String"}
      Foreground:string {"BROWN"}
      Background:string {"WHITE"}
      FontName:string {""}
      FontSize:int {12}
      FontStyle:string {""}
      LetterCase:int {0}
    }
    
    Character:table {
      Name:string {"Character"}
      Foreground:string {"KHAKI"}
      Background:string {"WHITE"}
      FontName:string {""}
      FontSize:int {12}
      FontStyle:string {""}
      LetterCase:int {0}
    }

    UUID:table {
      Name:string {"UUID"}
      Foreground:string {"ORCHID"}
      Background:string {"WHITE"}
      FontName:string {""}
      FontSize:int {12}
      FontStyle:string {""}
      LetterCase:int {0}
    }

    Preprocessor:table {
      Name:string {"Preprocessor"}
      Foreground:string {"GREY"}
      Background:string {"WHITE"}
      FontName:string {""}
      FontSize:int {12}
      FontStyle:string {""}
      LetterCase:int {0}
    }
    
    Operator:table {
      Name:string {"Operator"}
      Foreground:string {"BLACK"}
      Background:string {"WHITE"}
      FontName:string {""}
      FontSize:int {12}
      FontStyle:string {""}
      LetterCase:int {0}
    }
    
    Identifier:table {
      Name:string {"Identifier"}
      Foreground:string {"BLACK"}
      Background:string {"WHITE"}
      FontName:string {""}
      FontSize:int {12}
      FontStyle:string {""}
      LetterCase:int {0}
    }
    
    StringEOL:table {
      Name:string {"String (EOL)"}
      Foreground:string {"BROWN"}
      Background:string {"WHITE"}
      FontName:string {""}
      FontSize:int {12}
      FontStyle:string {""}
      LetterCase:int {0}
    }

    Verbatim:table {
      Name:string {"Verbatim"}
      Foreground:string {"BLACK"}
      Background:string {"WHITE"}
      FontName:string {""}
      FontSize:int {12}
      FontStyle:string {""}
      LetterCase:int {0}
    }
    
    RegEx:table {
      Name:string {"Regular expression"}
      Foreground:string {"ORCHID"}
      Background:string {"WHITE"}
      FontName:string {""}
      FontSize:int {12}
      FontStyle:string {""}
      LetterCase:int {0}
    }
    
    CommentLineDoc:table {
      Name:string {"Comment line (Doxygen)"}
      Foreground:string {"FOREST GREEN"}
      Background:string {"WHITE"}
      FontName:string {""}
      FontSize:int {12}
      FontStyle:string {""}
      LetterCase:int {0}
    }
    
    Keyword2:table {
      Name:string {"Keyword2"}
      Foreground:string {"MIDNIGHT BLUE"}
      Background:string {"WHITE"}
      FontName:string {""}
      FontSize:int {12}
      FontStyle:string {""}
      LetterCase:int {0}
    }
    
    CommentDocKeyword:table {
      Name:string {"Comment (Doxygen keyword)"}
      Foreground:string {"FOREST GREEN"}
      Background:string {"WHITE"}
      FontName:string {""}
      FontSize:int {12}
      FontStyle:string {""}
      LetterCase:int {0}
    }

    CommentDocKeywordError:table {
      Name:string {"Comment (Doxygen keyword error)"}
      Foreground:string {"FOREST GREEN"}
      Background:string {"WHITE"}
      FontName:string {""}
      FontSize:int {12}
      FontStyle:string {""}
      LetterCase:int {0}
    }
    
    GlobalClass:table {
      Name:string {"Global class"}
      Foreground:string {"BLACK"}
      Background:string {"WHITE"}
      FontName:string {""}
      FontSize:int {12}
      FontStyle:string {""}
      LetterCase:int {0}
    }
  }


  //
  // Default style settings for Scintilla
  //
  ScintillaIndicatorStyles:table {
    //
    // Currently/last active code.
    //
    CodeActive:table {
      Name:string {"Active code"}
      Style:string {"STRAIGHTBOX"}      
      Foreground:string {"YELLOW"}
      Alpha:int {60}
      OutlineAlpha:int {80}
      Under:string {"False"}
    }

    //
    // Highlight code.
    //
    CodeHighlight:table {
      Name:string {"Highlight code"}
      Style:string {"STRAIGHTBOX"}      
      Foreground:string {"BLUE"}
      Alpha:int {0}
      OutlineAlpha:int {80}
      Under:string {"False"}
    }
  } // End ScintillaIndicatorStyles
}
